1.finelly是可选的
2.使用try将可能出现异常代码包装起来，在执行过程中，一旦出现异常，就会生成一个对应异常类的对象，分局此对象的类型，去catch中进行酦醅
3.一旦try中的异常对象匹配到某一个catch时，就进入catch中进行异常的处理。一旦处理完成，就跳出当前try-catch结构（在没有写finally的情况）。继续执行其后的代码
4.catch中的异常类如果没有子父类关系，则谁声明在上，谁声明在下无所谓。catch中的异常类型如果满足子父类关系，则要求一定声明在父类的上面。否则，报错
5.常用的异常对象处理的方式：（1）String getMessage() (2)printStackTrace()
6.在try结构中声明的变量，再出了try结构以后，就不能再被调用

体会：使用try-catch-finally处理编译时异常，使得程序在编译时就不再报错，但是运行时仍可能报错。相当于我们使用try-catch-finally将一个编译时可能出现的异常，延迟到运行时出现。
7.try-catch-finally结构可以嵌套